{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.856783ad.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\n    const inputTextHandler = (e) => {\n        // console.log(e.target.value)\n        setInputText(e.target.value)\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        // console.log(\"submit\")\n        setTodos([...todos, {text: inputText, completed: false, id: Math.random()*1000}])\n        setInputText(\"\")\n    }\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n    return (\n      <form>\n        <input\n          value={inputText}\n          onChange={inputTextHandler}\n          type='text'\n          className='todo-input'\n        />\n        <button\n          onClick={submitTodoHandler}\n          className='todo-button'\n          type='submit'\n        >\n          <i className='fas fa-plus-square'></i>\n        </button>\n        <div className='select'>\n          <select name='todos' className='filter-todo' onChange={statusHandler}>\n            <option value='all'>All</option>\n            <option value='completed'>Completed</option>\n            <option value='uncompleted'>Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    );\n\n}\n\nexport default Form","import React from \"react\";\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n        // console.log(todo);\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    completed: !item.completed,\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n\n    return (\n      <div className='todo-container'>\n        <ul className='todo-list'>\n          {filteredTodos.map((todo) => (\n            <Todo\n              text={todo.text}\n              key={todo.id}\n              setTodos={setTodos}\n              todos={todos}\n              todo={todo}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n}\n\nexport default TodoList","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n  useEffect(() => {\n    filterHandler()\n    saveLocalTodos()\n  }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]))\n    } else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")))\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos} setStatus={setStatus}/>\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}